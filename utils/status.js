//https://www.whatap.io/ko/blog/40/

//1XX : Information responses
const Continue = 100;
exports.Continue = Continue;
const SwitchingProtocol = 101;
exports.SwitchingProtocol = SwitchingProtocol;
const Processing = 102;
exports.Processing = Processing;

//2XX : Successful responses
const OK = 200;
exports.OK = OK;
const Created = 201;
exports.Created = Created;
const Accepted = 202;
exports.Accepted = Accepted;
const NonAuthoritativeInformation = 203;
exports.NonAuthoritativeInformation = NonAuthoritativeInformation;
const NoContent = 204;
exports.NoContent = NoContent;
const ResetContent = 205;
exports.ResetContent = ResetContent;
const PartialContent = 206;
exports.PartialContent = PartialContent;
const MultiStatus = 207;
exports.MultiStatus = MultiStatus;
const AlreadyReported = 208;
exports.AlreadyReported = AlreadyReported;
const IMUsed = 226;
exports.IMUsed = IMUsed;

//3XX : Redirection messages
const MultipleChoice = 300;
exports.MultipleChoice = MultipleChoice;
const MovedPermanently = 301;
exports.MovedPermanently = MovedPermanently;
const Found = 302;
exports.Found = Found;
const SeeOther = 303;
exports.SeeOther = SeeOther;
const NotModified = 304;
exports.NotModified = NotModified;
const UseProxy = 305;
exports.UseProxy = UseProxy;
const Unused = 306;
exports.Unused = Unused;
const TemporaryRedirect = 307;
exports.TemporaryRedirect = TemporaryRedirect;
const PermanentRedirect = 308;
exports.PermanentRedirect = PermanentRedirect;

//4XX : Client error responses
const BadRequest = 400;
exports.BadRequest = BadRequest;
const Unauthorized = 401;
exports.Unauthorized = Unauthorized;
const PaymentRequired = 402;
exports.PaymentRequired = PaymentRequired;
const Forbidden = 403;
exports.Forbidden = Forbidden;
const NotFound = 404;
exports.NotFound = NotFound;
const MethodNotAllowed = 405;
exports.MethodNotAllowed = MethodNotAllowed;
const NotAcceptable = 406;
exports.NotAcceptable = NotAcceptable;
const ProxyAuthenticationRequired = 407;
exports.ProxyAuthenticationRequired = ProxyAuthenticationRequired;
const RequestTimeout = 408;
exports.RequestTimeout = RequestTimeout;
const Conflict = 409;
exports.Conflict = Conflict;
const Gone = 410;
exports.Gone = Gone;
const LengthRequired = 411;
exports.LengthRequired = LengthRequired;
const PreconditionFailed = 412;
exports.PreconditionFailed = PreconditionFailed;
const PayloadTooLarge = 413;
exports.PayloadTooLarge = PayloadTooLarge;
const URITooLong = 414;
exports.URITooLong = URITooLong;
const UnsupportedMediaType = 415;
exports.UnsupportedMediaType = UnsupportedMediaType;
const RequestedRangeNotSatisfiable = 416;
exports.RequestedRangeNotSatisfiable = RequestedRangeNotSatisfiable;
const ExpectationFailed = 417;
exports.ExpectationFailed = ExpectationFailed;
const Imateapot = 418;
exports.Imateapot = Imateapot;
const MisdirectedRequest = 421;
exports.MisdirectedRequest = MisdirectedRequest;
const UnprocessableEntity = 422;
exports.UnprocessableEntity = UnprocessableEntity;
const Locked = 423;
exports.Locked = Locked;
const FailedDependency = 424;
exports.FailedDependency = FailedDependency;
const UpgradeRequired = 426;
exports.UpgradeRequired = UpgradeRequired;
const PreconditionRequired = 428;
exports.PreconditionRequired = PreconditionRequired;
const TooManyRequests = 429;
exports.TooManyRequests = TooManyRequests;
const RequestHeaderFieldsTooLarge = 431;
exports.RequestHeaderFieldsTooLarge = RequestHeaderFieldsTooLarge;
const UnavailableForLegalReasons = 451;
exports.UnavailableForLegalReasons = UnavailableForLegalReasons;

//5XX : Server error reponses
const InternalServerError = 500;
exports.InternalServerError = InternalServerError;
const NotImplemented = 501;
exports.NotImplemented = NotImplemented;
const BadGateway = 502;
exports.BadGateway = BadGateway;
const ServiceUnavailable = 503;
exports.ServiceUnavailable = ServiceUnavailable;
const GatewayTimeout = 504;
exports.GatewayTimeout = GatewayTimeout;
const HTTPVersionNotSupported = 505;
exports.HTTPVersionNotSupported = HTTPVersionNotSupported;
const VariantAlsoNegotiates = 506;
exports.VariantAlsoNegotiates = VariantAlsoNegotiates;
const InsufficientStorage = 507;
exports.InsufficientStorage = InsufficientStorage;
const LoopDetected = 508;
exports.LoopDetected = LoopDetected;
const NotExtended = 510;
exports.NotExtended = NotExtended;
const NetworkAuthenticationRequired = 511;
exports.NetworkAuthenticationRequired = NetworkAuthenticationRequired;
